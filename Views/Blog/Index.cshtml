@model HumanBodyWeb.ViewModels.BlogListViewModel
@using System.Text.RegularExpressions
@using System.Net
@using Microsoft.AspNetCore.Identity
@using HumanBodyWeb.Models
@inject UserManager<ApplicationUser> UserManager
@inject HumanBodyWeb.Data.ApplicationDbContext _db

@functions {
    private static string HtmlToPlain(string html)
    {
        if (string.IsNullOrWhiteSpace(html)) return "";
        var text = Regex.Replace(html, "<.*?>", string.Empty);
        text = WebUtility.HtmlDecode(text);
        return Regex.Replace(text, @"\s{2,}", " ").Trim();
    }

    private static string Excerpt(string html, int words = 30)
    {
        var plain = HtmlToPlain(html);
        var tokens = plain.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        return tokens.Length <= words
        ? plain
        : string.Join(' ', tokens.Take(words)) + "‚Ä¶";
    }
}

@{
    ViewData["Title"] = "Blog";
    var currentUserId = User.Identity?.IsAuthenticated == true
    ? UserManager.GetUserId(User)
    : null;
}

<div class="container py-4">
    <h1 class="mb-4">@ViewData["Title"]</h1>

    <form method="get" class="row mb-4 g-2">
        <div class="col-md-4">
            <input type="text" name="search" value="@Model.SearchQuery" class="form-control"
                placeholder="Search blog posts..." />
        </div>
        <div class="col-md-4">
            <select name="categoryId" class="form-select" onchange="this.form.submit()">
                <option value="">All Categories</option>
                @foreach (var cat in Model.Categories)
                {
                    <option value="@cat.Id" selected="@(cat.Id == Model.SelectedCategoryId)">
                        @cat.Name
                    </option>
                }
            </select>
        </div>
        <div class="col-md-4">
            <button type="submit" class="btn btn-primary w-100">Filter</button>
        </div>
    </form>

    @if (!Model.Posts.Any())
    {
        <p>No blog posts found.</p>
    }
    else
    {
        <div class="row">
            @foreach (var post in Model.Posts)
            {
                var isSaved = false;
                if (User.Identity?.IsAuthenticated ?? false)
                {
                    isSaved = _db.SavedPosts.Any(s => s.PostId == post.Id && s.UserId == currentUserId);
                }

                <div class="col-md-6 mb-4">
                    <div class="card h-100 position-relative">
                        @* Save/Unsave icon *@
                        @if (User.Identity?.IsAuthenticated ?? false)
                        {
                            <form asp-action="ToggleSave" asp-route-id="@post.Id" method="post"
                                class="position-absolute top-0 end-0 m-2">
                                <button type="submit" class="btn btn-sm btn-outline-secondary">
                                    <i class="bi @(isSaved ? "bi-bookmark-fill" : "bi-bookmark")"></i>
                                </button>
                            </form>
                        }
                        @* Featured Image *@
                        @if (!string.IsNullOrEmpty(post.FeaturedImageUrl))
                        {
                            <img src="@post.FeaturedImageUrl" class="card-img-top" alt="Image for @post.Title"
                                style="object-fit: cover; height: 250px; width: 100%;" />
                        }
                        <div class="card-body d-flex flex-column">
                            <h3 class="card-title">@post.Title</h3>
                            <h6 class="card-subtitle mb-2 text-muted">
                                By @post.Author?.UserName
                                @if (post.PublishedOn.HasValue)
                                {
                                    @($" on {post.PublishedOn.Value:dd MMM yyyy}")
                                }
                            </h6>
                            <p class="card-text flex-grow-1">@Excerpt(post.Content)</p>

                            @* G√∂r√ºnt√ºlenme sayƒ±sƒ± *@
                            <small class="text-muted mb-2">üëÅÔ∏è @post.ViewCount</small>

                            <div class="mt-auto d-flex justify-content-between align-items-center">
                                <a asp-action="Details" asp-route-slug="@post.Slug" class="btn btn-primary">
                                    Read More
                                </a>

                                @if (User.IsInRole("Admin")
                                                        || (User.IsInRole("Editor") && post.AuthorId == currentUserId))
                                {
                                    <div>
                                        <a asp-action="Edit" asp-route-id="@post.Id" class="btn btn-sm btn-outline-secondary me-2">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <form asp-action="Delete" asp-route-id="@post.Id" method="post" class="d-inline"
                                            onsubmit="return confirm('Are you sure you want to delete this post?');">
                                            <button type="submit" class="btn btn-sm btn-outline-danger">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </form>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>